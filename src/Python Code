Python Code – 

Assignment -1 

import math

class CircleComp:
    def __init__(self):
        # Create variables
        self.radius = 0
        self.diameter = 0
        self.circumference = 0
        self.area = 0

    def calculate_properties(self):
        # Read radius using input
        self.radius = float(input("Enter the radius of the circle: "))

        # Calculate diameter
        self.diameter = self.radius * 2.0

        # Calculate circumference
        self.circumference = 2 * math.pi * self.radius

        # Calculate area
        self.area = math.pi * self.radius * self.radius

    def display_properties(self):
        # Print the calculated properties
        print(f"Diameter: {self.diameter}")
        print(f"Circumference: {self.circumference}")
        print(f"Area: {self.area}")

# Create an instance of CircleComp
circle_instance = CircleComp()

# Calculate and display properties
circle_instance.calculate_properties()
circle_instance.display_properties()



Assignment -10 


import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

@pytest.fixture
def driver():
    # Set the path of chromedriver.exe based on your machine
    driver = webdriver.Chrome(executable_path="path/to/chromedriver.exe")
    driver.implicitly_wait(10)
    yield driver
    driver.quit()

def test_process_discovery_navigation(driver):
    # Navigate to the URL
    driver.get("https://www.automationanywhere.com/")

    # Accept cookies
    accept_cookies(driver)

    try:
        # Perform mouse-over on "Products"
        products_menu = driver.find_element(By.Xapth “//a[normalize-space()='Products']”)
        ActionChains(driver).move_to_element(products_menu).perform()

        # Click on "Process Discovery"
        process_discovery_link = driver.find_element(By.Xapth “//a[@class='coh-link js-coh-menu-item-link '][normalize-space()='Process Discovery']”)
        process_discovery_link.click()

        # Verify the URL
        expected_url = "https://www.automationanywhere.com/products/process-discovery"
        WebDriverWait(driver, 10).until(
            EC.url_to_be(expected_url)
        )

        assert driver.current_url == expected_url, "Navigation to Process Discovery failed."

    except Exception as e:
        pytest.fail(f"An error occurred: {e}")

def accept_cookies(driver):
    try:
        # Attempt to locate and click the "Accept All Cookies" button
        accept_cookies_button = driver.find_element(By.ID, "onetrust-accept-btn-handler")  # replace with the actual ID or other locator
        accept_cookies_button.click()
    except Exception as e:
        print("No Accept All Cookies button found.")


